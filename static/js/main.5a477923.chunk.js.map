{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","resetGoods","setState","reverseGoods","sortByAlphabetically","ALPHABET","sortByLength","LENGTH","this","updatedGoods","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,WAAa,kBACX,EAAKC,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KATlB,EAaEK,aAAe,kBACb,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAfzB,EAmBEM,qBAAuB,kBACrB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,YApBvC,EAuBEC,aAAe,kBACb,EAAKJ,SAAS,CAAEH,SAAUL,EAASa,UAxBvC,4CA2BE,WACE,MAAiCC,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EA5DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQf,GACN,KAAKL,EAASW,SACZ,OAAOQ,EAAEE,cAAcD,GAEzB,KAAKpB,EAASa,OACZ,OAAOM,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAOtB,EAASM,SAIlBF,GACFa,EAAaM,UAGRN,EAqCgBO,CACnBvB,EAAiB,CAAEI,WAAUD,eAG/B,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBpB,IAAaL,EAASW,SAAW,GAAK,YACnEgB,QAASb,KAAKJ,qBAHhB,iCAQA,wBACEgB,KAAK,SACLD,UAAS,4BAAuBpB,IAAaL,EAASa,OAAS,GAAK,YACpEc,QAASb,KAAKF,aAHhB,4BAQA,wBACEc,KAAK,SACLD,UAAS,4BAAuBrB,EAAa,GAAK,YAClDuB,QAASb,KAAKL,aAHhB,sBAQEJ,IAAaL,EAASM,MAAQF,IAC9B,wBACEsB,KAAK,SACLD,UAAU,4BACVE,QAASb,KAAKP,WAHhB,sBAUJ,6BACGQ,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eAzEpC,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5a477923.chunk.js","sourcesContent":["import { Component } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  resetGoods = () => (\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    })\n  );\n\n  reverseGoods = () => (\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }))\n  );\n\n  sortByAlphabetically = () => (\n    this.setState({ sortType: SortType.ALPHABET })\n  );\n\n  sortByLength = () => (\n    this.setState({ sortType: SortType.LENGTH })\n  );\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const updatedGoods = getReorderedGoods(\n      goodsFromServer, { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={this.sortByAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetGoods}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {updatedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}